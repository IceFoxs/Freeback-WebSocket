// Generated by the protocol buffer compiler.  DO NOT EDIT!

package net.freeback.entries;

public final class FBUserProto {
  private FBUserProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class FBUser extends
      com.google.protobuf.GeneratedMessage {
    // Use FBUser.newBuilder() to construct.
    private FBUser() {}
    
    private static final FBUser defaultInstance = new FBUser();
    public static FBUser getDefaultInstance() {
      return defaultInstance;
    }
    
    public FBUser getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.freeback.entries.FBUserProto.internal_static_net_freeback_FBUser_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.freeback.entries.FBUserProto.internal_static_net_freeback_FBUser_fieldAccessorTable;
    }
    
    // optional string Code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private boolean hasCode;
    private java.lang.String code_ = "";
    public boolean hasCode() { return hasCode; }
    public java.lang.String getCode() { return code_; }
    
    // required string Username = 2;
    public static final int USERNAME_FIELD_NUMBER = 2;
    private boolean hasUsername;
    private java.lang.String username_ = "";
    public boolean hasUsername() { return hasUsername; }
    public java.lang.String getUsername() { return username_; }
    
    // optional string Passwd = 3;
    public static final int PASSWD_FIELD_NUMBER = 3;
    private boolean hasPasswd;
    private java.lang.String passwd_ = "";
    public boolean hasPasswd() { return hasPasswd; }
    public java.lang.String getPasswd() { return passwd_; }
    
    // optional string Nick = 4;
    public static final int NICK_FIELD_NUMBER = 4;
    private boolean hasNick;
    private java.lang.String nick_ = "";
    public boolean hasNick() { return hasNick; }
    public java.lang.String getNick() { return nick_; }
    
    // repeated string Phones = 5;
    public static final int PHONES_FIELD_NUMBER = 5;
    private java.util.List<java.lang.String> phones_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getPhonesList() {
      return phones_;
    }
    public int getPhonesCount() { return phones_.size(); }
    public java.lang.String getPhones(int index) {
      return phones_.get(index);
    }
    
    // optional string Photo = 6;
    public static final int PHOTO_FIELD_NUMBER = 6;
    private boolean hasPhoto;
    private java.lang.String photo_ = "";
    public boolean hasPhoto() { return hasPhoto; }
    public java.lang.String getPhoto() { return photo_; }
    
    // optional int32 sexual = 7;
    public static final int SEXUAL_FIELD_NUMBER = 7;
    private boolean hasSexual;
    private int sexual_ = 0;
    public boolean hasSexual() { return hasSexual; }
    public int getSexual() { return sexual_; }
    
    // optional string email = 8;
    public static final int EMAIL_FIELD_NUMBER = 8;
    private boolean hasEmail;
    private java.lang.String email_ = "";
    public boolean hasEmail() { return hasEmail; }
    public java.lang.String getEmail() { return email_; }
    
    // optional .net.freeback.FBProvince Province = 9;
    public static final int PROVINCE_FIELD_NUMBER = 9;
    private boolean hasProvince;
    private net.freeback.entries.FBRegionProto.FBProvince province_ = net.freeback.entries.FBRegionProto.FBProvince.getDefaultInstance();
    public boolean hasProvince() { return hasProvince; }
    public net.freeback.entries.FBRegionProto.FBProvince getProvince() { return province_; }
    
    // repeated string Addresses = 10;
    public static final int ADDRESSES_FIELD_NUMBER = 10;
    private java.util.List<java.lang.String> addresses_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getAddressesList() {
      return addresses_;
    }
    public int getAddressesCount() { return addresses_.size(); }
    public java.lang.String getAddresses(int index) {
      return addresses_.get(index);
    }
    
    // optional string Remark = 12;
    public static final int REMARK_FIELD_NUMBER = 12;
    private boolean hasRemark;
    private java.lang.String remark_ = "";
    public boolean hasRemark() { return hasRemark; }
    public java.lang.String getRemark() { return remark_; }
    
    public final boolean isInitialized() {
      if (!hasUsername) return false;
      if (hasProvince()) {
        if (!getProvince().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasCode()) {
        output.writeString(1, getCode());
      }
      if (hasUsername()) {
        output.writeString(2, getUsername());
      }
      if (hasPasswd()) {
        output.writeString(3, getPasswd());
      }
      if (hasNick()) {
        output.writeString(4, getNick());
      }
      for (java.lang.String element : getPhonesList()) {
        output.writeString(5, element);
      }
      if (hasPhoto()) {
        output.writeString(6, getPhoto());
      }
      if (hasSexual()) {
        output.writeInt32(7, getSexual());
      }
      if (hasEmail()) {
        output.writeString(8, getEmail());
      }
      if (hasProvince()) {
        output.writeMessage(9, getProvince());
      }
      for (java.lang.String element : getAddressesList()) {
        output.writeString(10, element);
      }
      if (hasRemark()) {
        output.writeString(12, getRemark());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getCode());
      }
      if (hasUsername()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUsername());
      }
      if (hasPasswd()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPasswd());
      }
      if (hasNick()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getNick());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getPhonesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPhonesList().size();
      }
      if (hasPhoto()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getPhoto());
      }
      if (hasSexual()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getSexual());
      }
      if (hasEmail()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getEmail());
      }
      if (hasProvince()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getProvince());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getAddressesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getAddressesList().size();
      }
      if (hasRemark()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(12, getRemark());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.freeback.entries.FBUserProto.FBUser parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.freeback.entries.FBUserProto.FBUser parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.freeback.entries.FBUserProto.FBUser parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.freeback.entries.FBUserProto.FBUser parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.freeback.entries.FBUserProto.FBUser parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.freeback.entries.FBUserProto.FBUser parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.freeback.entries.FBUserProto.FBUser parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static net.freeback.entries.FBUserProto.FBUser parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.freeback.entries.FBUserProto.FBUser parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.freeback.entries.FBUserProto.FBUser parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.freeback.entries.FBUserProto.FBUser prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.freeback.entries.FBUserProto.FBUser result;
      
      // Construct using net.freeback.entries.FBUserProto.FBUser.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.freeback.entries.FBUserProto.FBUser();
        return builder;
      }
      
      protected net.freeback.entries.FBUserProto.FBUser internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.freeback.entries.FBUserProto.FBUser();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.freeback.entries.FBUserProto.FBUser.getDescriptor();
      }
      
      public net.freeback.entries.FBUserProto.FBUser getDefaultInstanceForType() {
        return net.freeback.entries.FBUserProto.FBUser.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public net.freeback.entries.FBUserProto.FBUser build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.freeback.entries.FBUserProto.FBUser buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public net.freeback.entries.FBUserProto.FBUser buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.phones_ != java.util.Collections.EMPTY_LIST) {
          result.phones_ =
            java.util.Collections.unmodifiableList(result.phones_);
        }
        if (result.addresses_ != java.util.Collections.EMPTY_LIST) {
          result.addresses_ =
            java.util.Collections.unmodifiableList(result.addresses_);
        }
        net.freeback.entries.FBUserProto.FBUser returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.freeback.entries.FBUserProto.FBUser) {
          return mergeFrom((net.freeback.entries.FBUserProto.FBUser)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.freeback.entries.FBUserProto.FBUser other) {
        if (other == net.freeback.entries.FBUserProto.FBUser.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasUsername()) {
          setUsername(other.getUsername());
        }
        if (other.hasPasswd()) {
          setPasswd(other.getPasswd());
        }
        if (other.hasNick()) {
          setNick(other.getNick());
        }
        if (!other.phones_.isEmpty()) {
          if (result.phones_.isEmpty()) {
            result.phones_ = new java.util.ArrayList<java.lang.String>();
          }
          result.phones_.addAll(other.phones_);
        }
        if (other.hasPhoto()) {
          setPhoto(other.getPhoto());
        }
        if (other.hasSexual()) {
          setSexual(other.getSexual());
        }
        if (other.hasEmail()) {
          setEmail(other.getEmail());
        }
        if (other.hasProvince()) {
          mergeProvince(other.getProvince());
        }
        if (!other.addresses_.isEmpty()) {
          if (result.addresses_.isEmpty()) {
            result.addresses_ = new java.util.ArrayList<java.lang.String>();
          }
          result.addresses_.addAll(other.addresses_);
        }
        if (other.hasRemark()) {
          setRemark(other.getRemark());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setCode(input.readString());
              break;
            }
            case 18: {
              setUsername(input.readString());
              break;
            }
            case 26: {
              setPasswd(input.readString());
              break;
            }
            case 34: {
              setNick(input.readString());
              break;
            }
            case 42: {
              addPhones(input.readString());
              break;
            }
            case 50: {
              setPhoto(input.readString());
              break;
            }
            case 56: {
              setSexual(input.readInt32());
              break;
            }
            case 66: {
              setEmail(input.readString());
              break;
            }
            case 74: {
              net.freeback.entries.FBRegionProto.FBProvince.Builder subBuilder = net.freeback.entries.FBRegionProto.FBProvince.newBuilder();
              if (hasProvince()) {
                subBuilder.mergeFrom(getProvince());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setProvince(subBuilder.buildPartial());
              break;
            }
            case 82: {
              addAddresses(input.readString());
              break;
            }
            case 98: {
              setRemark(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string Code = 1;
      public boolean hasCode() {
        return result.hasCode();
      }
      public java.lang.String getCode() {
        return result.getCode();
      }
      public Builder setCode(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder clearCode() {
        result.hasCode = false;
        result.code_ = getDefaultInstance().getCode();
        return this;
      }
      
      // required string Username = 2;
      public boolean hasUsername() {
        return result.hasUsername();
      }
      public java.lang.String getUsername() {
        return result.getUsername();
      }
      public Builder setUsername(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder clearUsername() {
        result.hasUsername = false;
        result.username_ = getDefaultInstance().getUsername();
        return this;
      }
      
      // optional string Passwd = 3;
      public boolean hasPasswd() {
        return result.hasPasswd();
      }
      public java.lang.String getPasswd() {
        return result.getPasswd();
      }
      public Builder setPasswd(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPasswd = true;
        result.passwd_ = value;
        return this;
      }
      public Builder clearPasswd() {
        result.hasPasswd = false;
        result.passwd_ = getDefaultInstance().getPasswd();
        return this;
      }
      
      // optional string Nick = 4;
      public boolean hasNick() {
        return result.hasNick();
      }
      public java.lang.String getNick() {
        return result.getNick();
      }
      public Builder setNick(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNick = true;
        result.nick_ = value;
        return this;
      }
      public Builder clearNick() {
        result.hasNick = false;
        result.nick_ = getDefaultInstance().getNick();
        return this;
      }
      
      // repeated string Phones = 5;
      public java.util.List<java.lang.String> getPhonesList() {
        return java.util.Collections.unmodifiableList(result.phones_);
      }
      public int getPhonesCount() {
        return result.getPhonesCount();
      }
      public java.lang.String getPhones(int index) {
        return result.getPhones(index);
      }
      public Builder setPhones(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.phones_.set(index, value);
        return this;
      }
      public Builder addPhones(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.phones_.isEmpty()) {
          result.phones_ = new java.util.ArrayList<java.lang.String>();
        }
        result.phones_.add(value);
        return this;
      }
      public Builder addAllPhones(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.phones_.isEmpty()) {
          result.phones_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.phones_);
        return this;
      }
      public Builder clearPhones() {
        result.phones_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional string Photo = 6;
      public boolean hasPhoto() {
        return result.hasPhoto();
      }
      public java.lang.String getPhoto() {
        return result.getPhoto();
      }
      public Builder setPhoto(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPhoto = true;
        result.photo_ = value;
        return this;
      }
      public Builder clearPhoto() {
        result.hasPhoto = false;
        result.photo_ = getDefaultInstance().getPhoto();
        return this;
      }
      
      // optional int32 sexual = 7;
      public boolean hasSexual() {
        return result.hasSexual();
      }
      public int getSexual() {
        return result.getSexual();
      }
      public Builder setSexual(int value) {
        result.hasSexual = true;
        result.sexual_ = value;
        return this;
      }
      public Builder clearSexual() {
        result.hasSexual = false;
        result.sexual_ = 0;
        return this;
      }
      
      // optional string email = 8;
      public boolean hasEmail() {
        return result.hasEmail();
      }
      public java.lang.String getEmail() {
        return result.getEmail();
      }
      public Builder setEmail(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder clearEmail() {
        result.hasEmail = false;
        result.email_ = getDefaultInstance().getEmail();
        return this;
      }
      
      // optional .net.freeback.FBProvince Province = 9;
      public boolean hasProvince() {
        return result.hasProvince();
      }
      public net.freeback.entries.FBRegionProto.FBProvince getProvince() {
        return result.getProvince();
      }
      public Builder setProvince(net.freeback.entries.FBRegionProto.FBProvince value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasProvince = true;
        result.province_ = value;
        return this;
      }
      public Builder setProvince(net.freeback.entries.FBRegionProto.FBProvince.Builder builderForValue) {
        result.hasProvince = true;
        result.province_ = builderForValue.build();
        return this;
      }
      public Builder mergeProvince(net.freeback.entries.FBRegionProto.FBProvince value) {
        if (result.hasProvince() &&
            result.province_ != net.freeback.entries.FBRegionProto.FBProvince.getDefaultInstance()) {
          result.province_ =
            net.freeback.entries.FBRegionProto.FBProvince.newBuilder(result.province_).mergeFrom(value).buildPartial();
        } else {
          result.province_ = value;
        }
        result.hasProvince = true;
        return this;
      }
      public Builder clearProvince() {
        result.hasProvince = false;
        result.province_ = net.freeback.entries.FBRegionProto.FBProvince.getDefaultInstance();
        return this;
      }
      
      // repeated string Addresses = 10;
      public java.util.List<java.lang.String> getAddressesList() {
        return java.util.Collections.unmodifiableList(result.addresses_);
      }
      public int getAddressesCount() {
        return result.getAddressesCount();
      }
      public java.lang.String getAddresses(int index) {
        return result.getAddresses(index);
      }
      public Builder setAddresses(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.addresses_.set(index, value);
        return this;
      }
      public Builder addAddresses(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.addresses_.isEmpty()) {
          result.addresses_ = new java.util.ArrayList<java.lang.String>();
        }
        result.addresses_.add(value);
        return this;
      }
      public Builder addAllAddresses(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.addresses_.isEmpty()) {
          result.addresses_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.addresses_);
        return this;
      }
      public Builder clearAddresses() {
        result.addresses_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional string Remark = 12;
      public boolean hasRemark() {
        return result.hasRemark();
      }
      public java.lang.String getRemark() {
        return result.getRemark();
      }
      public Builder setRemark(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRemark = true;
        result.remark_ = value;
        return this;
      }
      public Builder clearRemark() {
        result.hasRemark = false;
        result.remark_ = getDefaultInstance().getRemark();
        return this;
      }
    }
    
    static {
      net.freeback.entries.FBUserProto.getDescriptor();
    }
    
    static {
      net.freeback.entries.FBUserProto.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_freeback_FBUser_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_freeback_FBUser_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014FBUser.proto\022\014net.freeback\032\016FBRegion.p" +
      "roto\"\323\001\n\006FBUser\022\014\n\004Code\030\001 \001(\t\022\020\n\010Usernam" +
      "e\030\002 \002(\t\022\016\n\006Passwd\030\003 \001(\t\022\014\n\004Nick\030\004 \001(\t\022\016\n" +
      "\006Phones\030\005 \003(\t\022\r\n\005Photo\030\006 \001(\t\022\016\n\006sexual\030\007" +
      " \001(\005\022\r\n\005email\030\010 \001(\t\022*\n\010Province\030\t \001(\0132\030." +
      "net.freeback.FBProvince\022\021\n\tAddresses\030\n \003" +
      "(\t\022\016\n\006Remark\030\014 \001(\tB#\n\024net.freeback.entri" +
      "esB\013FBUserProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_net_freeback_FBUser_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_net_freeback_FBUser_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_freeback_FBUser_descriptor,
              new java.lang.String[] { "Code", "Username", "Passwd", "Nick", "Phones", "Photo", "Sexual", "Email", "Province", "Addresses", "Remark", },
              net.freeback.entries.FBUserProto.FBUser.class,
              net.freeback.entries.FBUserProto.FBUser.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          net.freeback.entries.FBRegionProto.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
